on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-gh-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchains
        uses: dtolnay/rust-toolchain@stable
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Build rustlib
        working-directory: rustlib
        run: wasm-pack build --target web
      - name: Build tslib
        run: make tslib
      - name: Build standalone_app
        working-directory: standalone_app
        run: |
          npm install
          npx vite build --base=/optuna-dashboard/ --outDir ./gh-pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './standalone_app/gh-pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
